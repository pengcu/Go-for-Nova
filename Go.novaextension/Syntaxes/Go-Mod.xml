<?xml version="1.0" encoding="UTF-8"?>
<syntax name="go-mod">
	<meta>
		<name>Go Modules List</name>
		<type>structured</type>
		<preferred-file-extension>mod</preferred-file-extension>
	</meta>

	<detectors>
		<!-- Mandatory name for go.mod is, well, go.mod -->
		<filename priority="1.0">go.mod</filename>
	</detectors>

	<indentation>
		<increase>
			<expression>(\([^)\"']*$)</expression>
		</increase>
		<decrease>
			<expression>^\s*(\s*/\*.*\*/\s*)*[\)\\]</expression>
		</decrease>
	</indentation>

	<comments>
		<single>
			<expression>//</expression>
		</single>
	</comments>

	<brackets>
		<pair open="(" close=")" />
	</brackets>

	<surrounding-pairs>
		<pair open="&apos;" close="&apos;" />
		<pair open="&quot;" close="&quot;" />
		<pair open="(" close=")" />
	</surrounding-pairs>

	<scopes>
		<!-- Module -->
		<scope name="go-mod.module">
			<expression>(module)\s*([a-zA-ZÀ-ÖØ-öø-ÿ_\.][A-Za-zÀ-ÖØ-öø-ÿ0-9_\.\/]+)</expression>
			<capture number="1" name="go-mod.keyword" />
			<capture number="2" name="go-mod.path" />
		</scope>

		<!-- go version; note that it uses semantic versioning -->
		<scope name="go-mod.go-version">
			<expression>(go)\s*([0-9]*\.?[0-9]+\.?[0-9]*)</expression>
			<capture number="1" name="go-mod.keyword" />
			<capture number="2" name="go-mod.value.number" />
		</scope>

		<!-- Comments -->
		<scope name="go-mod.comment.single" spell-check="true">
			<expression>\/\/.*$</expression>
		</scope>

		<!-- required modules -->
		<scope name="go-mod.require">
			<starts-with>
				<expression>(require)\s*(\()</expression>
				<capture number="1" name="go-mod.keyword" />
				<capture number="2" name="go-mod.bracket" />
			</starts-with>
			<ends-with>
				<expression>(\))</expression>
				<capture number="1" name="go-mod.bracket" />
			</ends-with>
			<subscopes>
				<include syntax="self" collection="requirements" />
			</subscopes>
		</scope>

		<!-- module replacements -->
		<scope name="go-mod.replacement">
			<starts-with>
				<expression>(replace)\s*(\()</expression>
				<capture number="1" name="go-mod.keyword" />
				<capture number="2" name="go-mod.bracket" />
			</starts-with>
			<ends-with>
				<expression>(\))</expression>
				<capture number="1" name="go-mod.bracket" />
			</ends-with>
			<subscopes>
				<include syntax="self" collection="replacements" />
			</subscopes>
		</scope>
	</scopes>

	<collections>
		<!-- Values -->
		<collection name="values">
			<include syntax="self" collection="strings" />
			<scope name="go-mod.value.boolean">
				<symbol type="property" />
				<strings>
					<string>true</string>
					<string>false</string>
				</strings>
			</scope>
			<scope name="go-mod.value.number">
				<symbol type="property" />
				<expression>\b(\-|\+)?(?:\d+(?:\.\d*)?|(?:\.\d+))\b</expression>
			</scope>
		</collection>

		<!-- Strings -->
		<collection name="strings">
			<symbol type="property" />
			<scope name="go-mod.string.double-quoted">
				<expression>&quot;(?:[^&quot;\\]|\\.)*(?:&quot;|$)</expression>
			</scope>
			<scope name="go-mod.string.single-quoted">
				<expression>&apos;(?:[^&apos;\\]|\\.)*(?:&apos;|$)</expression>
			</scope>
		</collection>

		<!-- Keywords -->
		<collection name="keywords">
			<scope name="go-mod.keyword">
				<symbol type="keyword" />
				<strings>
					<string>module</string>
					<string>go</string>
					<string>require</string>
					<string>replace</string>
				</strings>
			</scope>
		</collection>

		<!-- There is just one operator, the replacement operator => -->
		<collection name="operators">
			<scope name="go-mod.operator">
				<strings>
					<string>=></string>
				</strings>
			</scope>
		</collection>

		<!-- Paths -->
		<collection name="paths">
			<scope name="go-mod.path">
				<symbol type="expression" />
				<expression>[a-zA-ZÀ-ÖØ-öø-ÿ_\.][A-Za-zÀ-ÖØ-öø-ÿ0-9\-_\.\/]+</expression>
			</scope>
		</collection>

		<!-- Each line of the requires block -->
		<collection name="requirements">
			<scope name="go-mod.requirements">
				<expression>\s*([a-zA-ZÀ-ÖØ-öø-ÿ_\.][A-Za-zÀ-ÖØ-öø-ÿ0-9\-_\.\/]+)\s*(\S*).*$</expression>
				<capture number="1" name="go-mod.path" />
				<capture number="2" name="go-mod.value.number" />
			</scope>
		</collection>

		<!-- Each line of the replacement block -->
		<collection name="replacements">
			<scope name="go-mod.replacement">
				<expression>^\s*([a-zA-ZÀ-ÖØ-öø-ÿ_\.][A-Za-zÀ-ÖØ-öø-ÿ0-9\-_\.\/]+)\s(\=\>)\s*([a-zA-ZÀ-ÖØ-öø-ÿ_\.][A-Za-zÀ-ÖØ-öø-ÿ0-9\-_\.\/]+)\s*([\w\.\-]*).*$</expression>
				<capture number="1" name="go-mod.path" />
				<capture number="2" name="go-mod.operator" />
				<capture number="3" name="go-mod.path" />
				<capture number="4" name="go-mod.value.number" />
			</scope>
		</collection>
	</collections>
</syntax>